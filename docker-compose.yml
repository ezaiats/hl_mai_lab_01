# version: '2.1'

# services:
#   mai-db-node-ex01:
#     build:
#       context: mysql
#       dockerfile: Dockerfile
#     container_name: mai-db-node-ex01
#     restart: unless-stopped
#     environment:
#       MYSQL_DATABASE: archdb
#       MYSQL_USER: stud
#       MYSQL_PASSWORD: stud
#       MYSQL_ROOT_PASSWORD: '1'
#     command: >
#       --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
#       --general-log=ON
#       --log-queries-not-using-indexes=ON
#     networks:
#       - arch-network
#     ports:
#       - 3360:3306
#     healthcheck:
#       test: "/usr/bin/mysql --user=stud --password=stud --execute \"SHOW DATABASES;\""
#       timeout: 20s
#       retries: 5
#     volumes:
#       - db-node-ex01-data:/var/lib/mysql

#   my_service:
#     build:
#       context: my_service
#       dockerfile: Dockerfile
#     container_name: my_service
#     environment:
#       - DB_HOST=mai-db-node-ex01
#       - DB_PORT=3306
#       - DB_LOGIN=stud
#       - DB_PASSWORD=stud
#       - DB_DATABASE=archdb
#     ports:
#       - 8080:8080
#     networks:
#       - arch-network
#     depends_on:
#       mai-db-node-ex01:
#         condition: service_healthy
#   post_server:
#     build:
#       context: post_server
#       dockerfile: Dockerfile
#     container_name: post_server
#     environment:
#       - DB_HOST=mai-db-node-ex01
#       - DB_PORT=3306
#       - DB_LOGIN=stud
#       - DB_PASSWORD=stud
#       - DB_DATABASE=archdb
#       - SERVICE_HOST=my_service
#     ports:
#       - 8083:8083
#     networks:
#       - arch-network
#     depends_on:
#       mai-db-node-ex01:
#         condition: service_healthy
#   delivery_server:
#     build:
#       context: delivery_server
#       dockerfile: Dockerfile
#     container_name: delivery_server
#     environment:
#       - DB_HOST=mai-db-node-ex01
#       - DB_PORT=3306
#       - DB_LOGIN=stud
#       - DB_PASSWORD=stud
#       - DB_DATABASE=archdb
#       - SERVICE_HOST=my_service
#     ports:
#       - 8082:8082
#     networks:
#       - arch-network
#     depends_on:
#       mai-db-node-ex01:
#         condition: service_healthy
# volumes:
#   db-node-ex01-data:

# networks:
#   arch-network:
#     driver: "bridge"
#     external: false


version: '2.1'

services:
  db-node-1:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    volumes:
      - db-node-1-data:/var/lib/mysql

  db-node-2:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    volumes:
      - db-node-2-data:/var/lib/mysql

  db-node-3:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-3
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3363:3306
    volumes:
      - db-node-3-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    depends_on:
      - db-node-1
      - db-node-2
      - db-node-3
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  my_service:
    build:
      context: my_service
      dockerfile: Dockerfile
    container_name: my_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
    ports:
      - 8080:8080
    networks:
      - arch-network
    depends_on:
      - proxysql

  post_server:
    build:
      context: post_server
      dockerfile: Dockerfile
    container_name: post_server
    environment:
      - DB_HOST=proxysql
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - SERVICE_HOST=my_service
    ports:
      - 8083:8083
    networks:
      - arch-network
    depends_on:
      - proxysql

  delivery_server:
    build:
      context: delivery_server
      dockerfile: Dockerfile
    container_name: delivery_server
    environment:
      - DB_HOST=proxysql
      - DB_PORT=3306
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - SERVICE_HOST=my_service
    ports:
      - 8082:8082
    networks:
      - arch-network
    depends_on:
      - proxysql

  # other_server:
  #   build:
  #     context: other_server
  #     dockerfile: Dockerfile
  #   container_name: other_server
  #   environment:
  #     - SERVICE_HOST=my_service
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - arch-network

volumes:
  db-node-ex01-data:
  db-node-1-data:
  db-node-2-data:
  db-node-3-data:
  proxysql-data:

networks:
  arch-network:
    driver: "bridge"
    external: false